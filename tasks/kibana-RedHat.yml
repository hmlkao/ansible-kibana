---
- name: Ensure libselinux-python on CentOS 6.x
  become: yes
  yum: name=libselinux-python state=present update_cache=yes
  when: ( ansible_distribution == "CentOS" ) and ( ansible_distribution_major_version == "6" )

- name: RedHat - add Elastic repo
  become: yes
  template: src=elastic.repo dest=/etc/yum.repos.d/elastic-{{ elastic_major_version }}.repo
  when: kibana_use_repository


# BEWARE
# yum module in ansible 2.5.0 (04/2018) generates 'failed: True' when is package already instelled
# * When is packagage already installed, registered variable looks like this
#     ok: [logs.survilla.dev] => {
#       "msg": "redhat_kibana_install_from_repo: {u'msg': u'', 'failed': False, u'changed': True, u'results': [u'Loaded plugins: fastestmirror\\nLoading mirror speeds from cached hostfile\\n * base: mirror.karneval.cz\\n * epel: mirror.karneval.cz\\n * extras: mirror.karneval.cz\\n * updates: mirror.karneval.cz\\nResolving Dependencies\\n--> Running transaction check\\n---> Package kibana.x86_64 0:5.6.4-1 will be installed\\n--> Finished Dependency Resolution\\n\\nDependencies Resolved\\n\\n================================================================================\\n Package         Arch            Version             Repository            Size\\n================================================================================\\nInstalling:\\n kibana          x86_64          5.6.4-1             elastic-5.x           51 M\\n\\nTransaction Summary\\n================================================================================\\nInstall  1 Package\\n\\nTotal download size: 51 M\\nInstalled size: 193 M\\nDownloading packages:\\nRunning transaction check\\nRunning transaction test\\nTransaction test succeeded\\nRunning transaction\\n  Installing : kibana-5.6.4-1.x86_64                                        1/1 \\n  Verifying  : kibana-5.6.4-1.x86_64                                        1/1 \\n\\nInstalled:\\n  kibana.x86_64 0:5.6.4-1                                                       \\n\\nComplete!\\n'], u'rc': 0}"
#     }
# and output is
#     changed: [logs.survilla.dev] => {"changed": true, "msg": "", "rc": 0, "results": ["Loaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirror.karneval.cz\n * epel: mirror.karneval.cz\n * extras: mirror.karneval.cz\n * updates: mirror.karneval.cz\nResolving Dependencies\n--> Running transaction check\n---> Package kibana.x86_64 0:5.6.4-1 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package         Arch            Version             Repository            Size\n================================================================================\nInstalling:\n kibana          x86_64          5.6.4-1             elastic-5.x           51 M\n\nTransaction Summary\n================================================================================\nInstall  1 Package\n\nTotal download size: 51 M\nInstalled size: 193 M\nDownloading packages:\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : kibana-5.6.4-1.x86_64                                        1/1 \n  Verifying  : kibana-5.6.4-1.x86_64                                        1/1 \n\nInstalled:\n  kibana.x86_64 0:5.6.4-1                                                       \n\nComplete!\n"]}
#
# * When some real problem occur (like it cannot find a package), registered variable looks like this
#     ok: [logs.survilla.dev] => {
#       "msg": "redhat_kibana_install_from_repo: {u'changed': False, u'results': [u\"No package matching 'kibana-5.6.6' found available, installed or updated\"], u'failed': True, 'attempts': 1, u'rc': 126, u'msg': u\"No package matching 'kibana-5.6.6' found available, installed or updated\"}"
#     }
# and output is
#     fatal: [logs.survilla.dev]: FAILED! => {"attempts": 1, "changed": false, "msg": "No package matching 'kibana-5.6.6' found available, installed or updated", "rc": 126, "results": ["No package matching 'kibana-5.6.6' found available, installed or updated"]}
#
# * When is new package installed correctly (not upgraded), registered variable looks like this
#     ok: [logs.survilla.dev] => {
#       "msg": "redhat_kibana_install_from_repo: {u'msg': u'', 'failed': False, u'changed': True, u'results': [u'Loaded plugins: fastestmirror\\nLoading mirror speeds from cached hostfile\\n * base: mirror.karneval.cz\\n * epel: mirror.karneval.cz\\n * extras: mirror.karneval.cz\\n * updates: mirror.karneval.cz\\nResolving Dependencies\\n--> Running transaction check\\n---> Package kibana.x86_64 0:5.6.6-1 will be installed\\n--> Finished Dependency Resolution\\n\\nDependencies Resolved\\n\\n================================================================================\\n Package         Arch            Version             Repository            Size\\n================================================================================\\nInstalling:\\n kibana          x86_64          5.6.6-1             elastic-5.x           51 M\\n\\nTransaction Summary\\n================================================================================\\nInstall  1 Package\\n\\nTotal download size: 51 M\\nInstalled size: 202 M\\nDownloading packages:\\nRunning transaction check\\nRunning transaction test\\nTransaction test succeeded\\nRunning transaction\\n  Installing : kibana-5.6.6-1.x86_64                                        1/1 \\n  Verifying  : kibana-5.6.6-1.x86_64                                        1/1 \\n\\nInstalled:\\n  kibana.x86_64 0:5.6.6-1                                                       \\n\\nComplete!\\n'], u'rc': 0}"
#     }
# and output is
#     changed: [logs.survilla.dev] => {"changed": true, "msg": "", "rc": 0, "results": ["Loaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirror.karneval.cz\n * epel: mirror.karneval.cz\n * extras: mirror.karneval.cz\n * updates: mirror.karneval.cz\nResolving Dependencies\n--> Running transaction check\n---> Package kibana.x86_64 0:5.6.6-1 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package         Arch            Version             Repository            Size\n================================================================================\nInstalling:\n kibana          x86_64          5.6.6-1             elastic-5.x           51 M\n\nTransaction Summary\n================================================================================\nInstall  1 Package\n\nTotal download size: 51 M\nInstalled size: 202 M\nDownloading packages:\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : kibana-5.6.6-1.x86_64                                        1/1 \n  Verifying  : kibana-5.6.6-1.x86_64                                        1/1 \n\nInstalled:\n  kibana.x86_64 0:5.6.6-1                                                       \n\nComplete!\n"]}
#
##############
# 'until' works weird, if I disable it, it works like a charm
##############
- name: RedHat - Install Kibana
  become: yes
  yum: name=kibana{% if elastic_version is defined and elastic_version != ""  %}-{{ elastic_version }}{% endif %} state=present update_cache=yes
  when: kibana_use_repository
  register: redhat_kibana_install_from_repo
  notify: restart kibana
  #until: redhat_kibana_install_from_repo is failed
  #retries: 5
  #delay: 10
  #ignore_errors: True

- debug:
    msg: "redhat_kibana_install_from_repo: {{ redhat_kibana_install_from_repo }}"

- name: RedHat - Install Kibana from url
  become: yes
  yum: name={% if kibana_custom_package_url is defined %}{{ kibana_custom_package_url }}{% else %}{{ kibana_package_url }}-{{ kibana_version }}.noarch.rpm{% endif %} state=present
  when: not kibana_use_repository
  register: kibana_install_from_package
  notify: restart kibana
