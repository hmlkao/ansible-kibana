---
# Test if feature is installed
- shell: "{{ kibana_home }}/bin/kibana-plugin list | grep x-pack"
  become: yes
  register: x_pack_installed
  changed_when: False
  failed_when: "'ERROR' in x_pack_installed.stdout"
  check_mode: no
  ignore_errors: yes
  environment:
    CONF_DIR: "{{ conf_dir }}"


# Remove X-Pack if installed and its not been requested or the Kibana version has changed
- name: Remove x-pack plugin
  become: yes
  command: "{{ kibana_home }}/bin/kibana-plugin remove x-pack"
  register: xpack_state
  failed_when: xpack_state.rc != 0
  changed_when: xpack_state.rc == 0
  when: x_pack_installed.rc == 0 and (not kibana_enable_xpack or kibana_version_changed)
  notify: restart kibana
  environment:
    CONF_DIR: "{{ conf_dir }}"


# Install plugin if not installed, or the Kibana version has changed (so removed above), and its been requested
- name: Download x-pack from url
  get_url: url={{ kibana_xpack_custom_url }} dest=/tmp/x-pack-{{ kibana_version }}.zip
  when: (x_pack_installed.rc == 1 or kibana_version_changed) and (kibana_enable_xpack and kibana_xpack_custom_url is defined)

- name: Install x-pack plugin from local
  become: yes
  command: >
    {{ kibana_home }}/bin/kibana-plugin install --silent file:///tmp/x-pack-{{ kibana_version }}.zip
  register: xpack_state
  changed_when: xpack_state.rc == 0
  when: (x_pack_installed.rc == 1 or kibana_version_changed) and (kibana_enable_xpack and kibana_xpack_custom_url is defined)
  notify: restart kibana
  environment:
    CONF_DIR: "{{ conf_dir }}"

- name: Delete x-pack zip file
  file: dest=/tmp/x-pack-{{ kibana_version }}.zip state=absent
  when: kibana_xpack_custom_url is defined

- name: Install x-pack plugin from elastic.co
  become: yes
  command: >
    {{ kibana_home }}/bin/kibana-plugin install --silent x-pack
  register: xpack_state
  failed_when: xpack_state.rc != 0
  changed_when: xpack_state.rc == 0
  when: (x_pack_installed.rc == 1 or kibana_version_changed) and (kibana_enable_xpack and kibana_xpack_custom_url is not defined)
  notify: restart kibana
  environment:
    CONF_DIR: "{{ conf_dir }}"
